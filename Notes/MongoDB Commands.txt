db.adminCommand( { listDatabases: 1 } )   ===>show all databases.
db.getCollectionNames()
db.getCollectionInfos()


use db_name
db
db.collection_name
db.collection_name.insertOne(document)
db.products.insert(
   [
     { _id: 11, item: "pencil", qty: 50, type: "no.2" },
     { item: "pen", qty: 20 },
     { item: "eraser", qty: 25 }
   ]
)
db.collection_name.find(query)
db.empRecords.find({salary:{$lt:10000},empId:{$gt:200}})
db.collection_name.findOne(query)
db.empRecords.findOne({empId:{$lt:100}})
db.collection_name.remove(query)
db.empRecords.remove({salary:{$lt:9000}})
db.collection_name.update(query, updateParams)
db.empRecords.update({empId:255},{$set:{salary:8850}})
db.empRecords.update({empId:160},{$inc:{salary:1500}})

=============================Initialising Node Project=========================
npm init -y

==============================================================

help	==>Show help.
db.help()  ==>Show help for database methods.
db.<collection>.help()	==>Show help on collection methods. The <collection> can be the name of an existing collection or a non-existing collection.
show dbs  ==>Print a list of all databases on the server.

============================Sum of marks==================================
db.students.aggregate([{$project:{_id:"$name",averageQuantity:{"$avg":["$Maths","$English","$Computers"]}}},{$match:{"averageQuantity":{$gte:55}}}])
=================================================================================

=============================Pagination using skip() & Limits()===========================

// ===========================Get all customers======================
app.get("/customers", function(req, res) {
    let pageNumber = req.query.page;
    let p = req.query.sortBy;
    let nPerPage = 4;


    if (pageNumber == null) {
        pageNumber = 1;
    }

    client.connect(function(err, client) {
        console.log("Get all Customers:/customers", p);
        const db = client.db(dbName);
        db.collection("customers").find().skip(pageNumber > 0 ? ((pageNumber - 1) * nPerPage) : 0).limit(nPerPage).toArray(function(err, result) {
            if (p) {
                result = result.sort(function compare(n1, n2) {
                    let a = n1[p]
                    let b = n2[p]
                    console.log('values::', a, b)
                    if (a > b) { return 1; }
                    if (a == b) { return 0; }
                    if (a < b) { return -1; }

                })
            }
            console.log(result);
            res.send(result);
        });

    });


});
======================================Checkboxes usong $in==================================================================
db.customers.find({ city: { $in: ["appliances", "Noida"] } ,name:{$in:["Amit"]}})
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
========================================================================================================
