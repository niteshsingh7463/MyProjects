\?;    ===>>for help.
C:\>cd xampp C:\xampp>cd MySQL C:\xampp\mysql>cd bin C:\xampp\mysql\bin>mysql -h localhost -u root.

drop database (comma seprated database names)-------except current used databse

truncate table employee------(to blank the table)

Syntax(Oracle,MySQL,MariaDB): ALTER TABLE table_name RENAME TO new_table_name;
Desc TABLE_NAME;==============>show the structure of table.
SHOW COLUMNS FROM table_name;
CREATE TABLE MyGuests (
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
firstname VARCHAR(30) NOT NULL,
lastname VARCHAR(30) NOT NULL,
email VARCHAR(50),
reg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
)

insert into Student(name,age,city) values("roshan",27,agra)

select name,age from student where id in (1,2)

update student set name=faisal where id=4

delete from student where id=4


alter table student add salary

sp_rename 'student','Employee'

sp_rename 'employee.city','address'

alter table employee alter column salary varchar(10)

alter table student drop column age

Aliases
select cat id as id,name from cats;
select name as 'cat name' from cats;

Update
update cats set breed='shorthair'where breed='tabby'

Drop
drop table cats;

Delete
delete from cats where name='egg';
delete from cats;-----dlete all data from cats

Show
show tables;
show databases;
desc shirts;


------------------------------------------------------------------------------
Query a list of CITY names from STATION with even ID numbers only.
 You may print the results in any order,
 but must exclude duplicates from your answer.

select distinct city from station where(id%2)=0;

--------------------------------------------------------------------------------
find the difference between the total number of CITY entries in the 
table and the number of distinct CITY entries in the table.

select count(city)-count(distinct city) from station

--------------------------------------------------------------------------------
oreder by--------used for oredring
SELECT * FROM Student ORDER BY Age ASC , ROLL_NO DESC;
In this example we will fetch all data from the table Student and then sort the result 
in ascending order first according to the column Age.
 and then in descending order according to the column ROLL_NO.

select name from students where marks>75 order by right(name,3),id asc
select name from students where marks>75 order by substring(name,'start index','end index'),id asc;

------------------------------------------------------------------------------------------

=====================================Case===================================
SELECT CASE
	 WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
         WHEN A = B AND B = C THEN 'Equilateral'
         WHEN A = B OR A = C OR B = C THEN 'Isosceles'
         ELSE 'Scalene'
       END
FROM TRIANGLES

==========================================================================
Query the total population of all cities in CITY where District is California

select sum(population) FROM city where DISTRICT='California';
==========================================================================
Query the average population of all cities in CITY where District is California

select AVG(population) from city where district='California'; 
==========================================================================
Query the average population for all cities in CITY, rounded down to the nearest integer.

select floor(avg(population)) from city;
==========================================================================

Query the sum of the populations for all Japanese cities in CITY.
 The COUNTRYCODE for Japan is JPN.

select sum(population) from city where countrycode='JPN';
=========================================================================
Query the difference between the maximum and minimum populations in CITY.

select max(population)-min(population) from city;
=========================================================================

Query a count of the number of district in CITY having a Population larger than 100000.

select count(district) from city where population>100000;
=========================================================================
convert salary int to float using CAST() function
  --->CAST(Salary AS Float) 
=========================================================================
Given the CITY and COUNTRY tables, query the sum of the populations of 
all cities where the CONTINENT is 'Asia'.
-->select sum(city.population) from city inner join country 
on CITY.CountryCode=COUNTRY.Code where continent='asia';
=========================================================================
Given the CITY and COUNTRY tables, query the names of all the continents (COUNTRY.Continent) 
and their respective average city populations (CITY.Population) 
rounded down to the nearest integer.
-->SELECT COUNTRY.CONTINENT, FLOOR(AVG(CITY.POPULATION)) FROM CITY JOIN COUNTRY 
ON CITY.COUNTRYCODE = COUNTRY.CODE GROUP BY COUNTRY.CONTINENT;
=========================================================================
Write a query to print the pattern P(5).
* * * * * 
* * * * 
* * * 
* * 
*
-->
declare @i int=5
while(@i>0)
begin
print replicate('* ',@i)
set @i=@i-1
end
=========================================================================
Write a query to print all prime numbers less than or equal to 1000 .
 Print your result on a single line, and use the ampersand (&) character
 as your separator (instead of a space).

For example, the output for all prime numbers<=10 would be:

2&3&5&7

-------->
DECLARE @i int=2;
declare @prime int = 0;
DECLARE @result nvarchar(1000) = ''; --CAN BE ADJUSTED
WHILE (@i<=1000)
begin
   DECLARE @j int = @i-1;
   SET @prime = 1;
   WHILE(@j > 1)
   begin
      IF @i % @j = 0
      begin 
         SET @PRIME = 0;
      end
    set @j = @j - 1;
   end
   
   IF @PRIME = 1
   BEGIN
      set @result += cast(@i as nvarchar(1000)) + '&';
   END
set @i = @i + 1;
end
set @result = SUBSTRING(@result, 1, LEN(@result) - 1)
select @result

============================================================================
Drop column in table
Syntax
The syntax to drop a column in a table in MySQL (using the ALTER TABLE statement) is:

ALTER TABLE table_name
  DROP COLUMN column_name;

================================================================================
ALTER TABLE contacts
  ADD last_name varchar(40) NOT NULL
    AFTER contact_id;
===============================================================================
ALTER TABLE contacts
  RENAME TO people;
================================================================================
alter table products change id prodid integer;  =======>>Rename a Column name.